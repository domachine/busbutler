/*
 * File: app/view/root.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.root', {
    extend: 'Ext.Container',

    config: {
        layout: {
            type: 'vbox'
        },
        items: [
            {
                xtype: 'titlebar',
                docked: 'top',
                title: 'Abfahrszeiten'
            },
            {
                xtype: 'selectfield',
                id: 'stationfield',
                itemId: 'stationfield',
                label: 'Haltestelle',
                value: 1240,
                displayField: 'key',
                store: 'stations'
            },
            {
                xtype: 'list',
                id: 'departureTimeList',
                itemTpl: [
                    '<div>{line} {direction} in {countdown} min</div>'
                ],
                store: 'departureTimes',
                disableSelection: false,
                flex: 1
            }
        ],
        listeners: [
            {
                fn: 'onMyselectfieldChange',
                event: 'change',
                delegate: '#stationfield'
            },
            {
                fn: 'onContainerInitialize',
                event: 'initialize'
            },
            {
                fn: 'onContainerGeopositionChangeD',
                event: 'geopositionChanged'
            }
        ]
    },

    onMyselectfieldChange: function(selectfield, newValue, oldValue, options) {
        Ext.getCmp("departureTimeList").getStore().load({
            params: {
                id: newValue
            }
        });
        localStorage.setItem("stationID", newValue);
    },

    onContainerInitialize: function(component, options) {
        if(!navigator.geolocation){
            var stationID = localStorage.getItem("stationID");
            if(stationID === null)
            stationID = 1240;
            Ext.getCmp("stationfield").setValue(stationID);
        }else{
            //geolocation works
            navigator.geolocation.getCurrentPosition(
            function(position){
                component.fireEvent("geopositionChanged",{latitude: position.coords.latitude, longitude: position.coords.longitude});
            },
            function(){
                alert("Fehlerhafte Ortung.");
            }
            );
        }
        var reloadTask = Ext.create('Ext.util.DelayedTask', function() {
            var stationID = Ext.getCmp("stationfield").getValue();
            Ext.getCmp("departureTimeList").getStore().load({
                params: {
                    id: stationID
                }
            });
            reloadTask.delay(10000);
        });

        reloadTask.delay(10000);
    },

    onContainerGeopositionChangeD: function(opts, event) {
        //var url = "/haltestellen/_design/view/_list/next/allByCoords?coords=["+opts.longitude + "," + opts.latitude + "]";
        var url = "/haltestellen/_design/view/_list/next/allByCoords?coords=" + JSON.stringify([opts.longitude, opts.latitude]);
        Ext.Ajax.request({
            url: url,
            headers: { 'Content-Type': 'application/json' },
            success: function(response){
                var text = JSON.parse(response.responseText);
                var stationsStore = Ext.getCmp("stationfield").getStore();
                var stationModel = stationsStore.getModel();
                for(var i = text.rows.length-1; i >= 0 ; i--){
                    var station = new stationModel();
                    station.set("id", text.rows[i].id);
                    station.set("key", text.rows[i].location);
                    station.set("value", text.rows[i].oldid);
                    stationsStore.insert(0, station);
                }
                //select first station
                var firstStation = stationsStore.getRange(0,0)[0];
                Ext.getCmp("stationfield").setValue(firstStation.get("value"));
            }
        });
    }

});